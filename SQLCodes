USE restaurant_db;
Obective 1
-- 1. View the menu_items table.
Select *
FROM menu_items;

-- 2. Find the number of items on the menu.
Select COUNT(*) as num_items
FROM menu_items;

-- 3. What are the least and most expensive items on the menu?
-- Most expensive
SELECT * 
FROM menu_items
ORDER BY price desc;

-- Least expensive
SELECT * 
FROM menu_items
ORDER BY price;

-- 4. How many Italian dishes are on the menu?
SELECT COUNT(*)
FROM menu_items
WHERE category = 'Italian';

-- 5. What are the least and most expensive Italian dishes on the menu?
SELECT *
FROM menu_items
WHERE category = 'Italian'
Order by price;

-- 6. How many dishes are in each category?
SELECT category, COUNT(*) as num_dishes
FROM menu_items
GROUP by category;

-- or

SELECT category, COUNT(menu_item_id) as num_dishes
FROM menu_items
GROUP BY category;

-- 7. What is the average dish price within each category?
SELECT category, round(avg(price), 2) as avg_price
FROM menu_items
GROUP BY category;

Objective 2

-- 1. View the order_details table. 
SELECT *
FROM order_details;

-- 2. What is the date range of the table?
SELECT MIN(order_date), MAX(order_date)
FROM order_details;

-- 3. How many orders were made within this date range? 
SELECT COUNT(DISTINCT order_id) as uniq_order
FROM order_details;

-- 4. How many items were ordered within this date range?
SELECT COUNT(*) as num_orders
FROM order_details;

-- 5. Which orders had the most numbers of items?
SELECT order_id, COUNT(item_id) as num_items
FROm order_details
GROUP BY order_id
ORDER BY num_items desc;

-- 6. How many orders had more than 12 items?
SELECT order_id, COUNT(item_id) as num_items
FROm order_details
GROUP BY order_id
HAVING num_items > 12; 

SELECT COUNT(*)
FROM (SELECT order_id, COUNT(item_id) as num_items
FROm order_details
GROUP BY order_id
HAVING num_items > 12) as num_orders;

Objective 3
-- 1. Combine the menu_items and order_details tables into a single table
SELECT * 
FROM order_details as o
LEFT JOIN menu_items as e
ON o.item_id = e.menu_item_id;
 
-- 2. What were the least and most ordered items? What categories were they in?
SELECT e.item_name, COUNT(*), e.category
FROM order_details as o
LEFT JOIN menu_items as e 
ON o.item_id = e.menu_item_id
GROUP BY e.item_name, e.category
ORDER BY COUNT(*) desc;

-- or

SELECT e.item_name, e.category, COUNT(order_details_id) as num_purch
FROM order_details as o
LEFT JOIN menu_items as e 
ON o.item_id = e.menu_item_id
GROUP BY e.item_name, e.category
ORDER BY num_purch desc;

-- 3. What were the top 5 orders that spent the most money?
SELECT order_id, SUM(price) as total_spent 
FROM order_details as o
LEFT JOIN menu_items as e
ON o.item_id = e.menu_item_id
GROUP BY order_id
ORDER BY total_spent desc
LIMIT 5;

-- 4. View the details of the highest spend order. What insights can you gather from the results?
SELECT category, COUNT(item_id) as num_items, SUM(price) as total  
FROM order_details as o
LEFT JOIN menu_items as e
ON o.item_id = e.menu_item_id
WHERE order_id = 440
GROUP BY category;


-- 5. Bonus: View the details of the top 5 highest spend orders. What insights can you gatgher from the results?
SELECT order_id, SUM(price) as total_spent 
FROM order_details as o
LEFT JOIN menu_items as e
ON o.item_id = e.menu_item_id
GROUP BY order_id
ORDER BY total_spent desc
LIMIT 5;

-- 	order_id	total_spent
-- 	440	192.15
-- 	2075	191.05
-- 	1957	190.10
-- 	330	189.70
-- 	2675	185.10

SELECT order_id, category, COUNT(item_id) as num_items, SUM(price) as total  
FROM order_details as o
LEFT JOIN menu_items as e
ON o.item_id = e.menu_item_id
WHERE order_id IN (440, 2075, 1957, 330, 2675)
GROUP BY category, order_id;
